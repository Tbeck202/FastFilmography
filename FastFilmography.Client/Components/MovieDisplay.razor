@inject ITMDBApi Tmdbapi
@rendermode InteractiveAuto

@if(Movie != null)
{
    @if (DisplayMovie)
    {
        <div class="card d-flex flex-column large-screens" style="width: 10rem; margin: 5px;">
            <img src="@Movie.PosterPath" class="card-img-top" alt="Poster art for @Movie.Title">

            <!-- Card body as flex container with column layout -->
            <div class="card-body d-flex flex-column">

                <!-- Title -->
                <h5 class="card-title small">@Movie.Title</h5>

                @if (Movie.Selectable)
                {
                    <!-- Spacer div pushes the button down -->
                    <div class="row mt-auto">
                        <button class="btn btn-primary w-100" @onclick="OnSelectMovie">Select</button>
                    </div>
                }
                else
                {
                    <div class="row mt-auto">
                        <button disabled class="btn btn-primary w-100">Select</button>
                    </div>
                }
            </div>
        </div>


        <div class="card mb-1 small-screens" style="max-width: 250px; max-height: 100px;">
            <div class="row g-0">
                <div class="col-3">
                    <img src="@Movie.PosterPath" class="img-fluid rounded-start" style="max-height: 100px;" alt="Poster art for @Movie.Title">
                </div>
                <div class="col-9 justify-content-start">
                    <div class="card-body d-flex flex-column h-100 justify-content-between">
                        <h5 class="card-title small">@Movie.Title</h5>
                        @if (Movie.Selectable)
                        {
                            <btn class="btn btn-primary btn-sm w-75" @onclick="OnSelectMovie">Select</btn>
                        }
                        else
                        {
                            <btn disabled class="btn btn-primary btn-sm w-75">Select</btn>
                        }
                        
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="card d-flex flex-column large-screens" style="width: 10rem; margin: 5px;">
            <img src="https://placehold.co/300x450" class="card-img-top" alt="Loading ...">

            <!-- Card body as flex container with column layout -->
            <div class="card-body d-flex flex-column">

                <!-- Title -->
                <h5 class="card-title small placeholder-glow"><span class="placeholder col-10"></span></h5>

                <!-- Spacer div pushes the button down -->
                <div class="row mt-auto">
                    <btn class="btn btn-primary w-100" disabled>
                        <span role="status">Loading...</span>
                    </btn>
                </div>

            </div>
        </div>

        <div class="card mb-1 small-screens" style="max-width: 250px; max-height: 100px;">
            <div class="row g-0">
                <div class="col-3">
                    <img src="https://placehold.co/300x450" class="img-fluid rounded-start" style="max-height: 100px;" alt="Loading ...">
                </div>
                <div class="col-9 justify-content-start">
                    <div class="card-body d-flex flex-column h-100 justify-content-between">
                        <h5 class="card-title small placeholder-glow"><span class="placeholder col-10"></span></h5>
                        <btn disabled class="btn btn-primary btn-sm w-75"><span role="status">Loading...</span></btn>
                    </div>
                </div>
            </div>
        </div>
    }
}


@code {
    [Parameter]
    public Movie Movie { get; set; }

    [Parameter]
    public bool DisplayMovie { get; set; }

    [Parameter]
    public EventCallback DisableMovieSelection { get; set; }

    [Parameter]
    public EventCallback<int> MovieSelected { get; set; }


    private async void OnSelectMovie(MouseEventArgs e)
    {
        await MovieSelected.InvokeAsync(Movie.Id);
    }
}
